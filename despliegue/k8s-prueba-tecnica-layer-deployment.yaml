# utilizando Kubernetes (K8s es su acronimo, lo vamos a usar para referirnos asi mas adelante).
# En cada punto especificaremos los elementos respectivos.

# Pruebas tecnicas
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pruebastecnicas
  labels:
    app: pruebastecnicas
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pruebastecnicas
  template:
    metadata:
      labels:
        app: pruebastecnicas
    spec:
      containers:
        - name: pruebastecnicas
          image: us-central1-docker.pkg.dev/grupo-19-experimento2-400014/uniandes-misw-proyecto-grupo19/servicio-prueba-tecnica:1.0
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "64Mi"
              cpu: "250m"
          env:
            - name: "SQLALCHEMY_DATABASE_URI"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: uri
          ports:
            - containerPort: 5000
          imagePullPolicy: Always
---
kind: Service
apiVersion: v1
metadata:
  name: servicio-pruebastecnicas
  annotations:
    cloud.google.com/backend-config: '{"default": "pruebastecnicas-config"}'
spec:
  type: NodePort
  selector:
    app: pruebastecnicas
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
      nodePort: 31020
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: pruebastecnicas-auto
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: pruebastecnicas
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
