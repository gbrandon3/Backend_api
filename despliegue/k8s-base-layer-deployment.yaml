# utilizando Kubernetes (K8s es su acronimo, lo vamos a usar para referirnos asi mas adelante).
# En cada punto especificaremos los elementos respectivos.
# Pruebas tecnicas
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pruebastecnicas
  labels:
    app: pruebastecnicas
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pruebastecnicas
  template:
    metadata:
      labels:
        app: pruebastecnicas
    spec:
      containers:
        - name: pruebastecnicas
          image: us-central1-docker.pkg.dev/grupo-19-experimento2-400014/uniandes-misw-proyecto-grupo19/servicio-prueba-tecnica:1.0
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "64Mi"
              cpu: "250m"
          env:
            - name: "SQLALCHEMY_DATABASE_URI"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: uri
          ports:
            - containerPort: 5000
          imagePullPolicy: Always
---
kind: Service
apiVersion: v1
metadata:
  name: servicio-pruebastecnicas
  annotations:
    cloud.google.com/backend-config: '{"default": "pruebastecnicas-config"}'
spec:
  type: NodePort
  selector:
    app: pruebastecnicas
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
      nodePort: 31020
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: pruebastecnicas-auto
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: pruebastecnicas
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
---
# Pruebas tecnicas contingencia
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pruebastecnicascontingencia
  labels:
    app: pruebastecnicascontingencia
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pruebastecnicascontingencia
  template:
    metadata:
      labels:
        app: pruebastecnicascontingencia
    spec:
      containers:
        - name: pruebastecnicascontingencia
          image: us-central1-docker.pkg.dev/grupo-19-experimento2-400014/uniandes-misw-proyecto-grupo19/servicio-prueba-tecnica-contingencia:1.0
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "64Mi"
              cpu: "250m"
          env:
            - name: "SQLALCHEMY_DATABASE_URI"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: uri
          ports:
            - containerPort: 5100
          imagePullPolicy: Always
---
kind: Service
apiVersion: v1
metadata:
  name: servicio-pruebastecnicascontingencia
  annotations:
    cloud.google.com/backend-config: '{"default": "pruebastecnicascontingencia-config"}'
spec:
  type: NodePort
  selector:
    app: pruebastecnicascontingencia
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5100
      nodePort: 31100
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: pruebastecnicascontingencia-auto
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: pruebastecnicascontingencia
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
---
# Proxy Pruebas tecnicas
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxypruebastecnicas
  labels:
    app: proxypruebastecnicas
spec:
  replicas: 1
  selector:
    matchLabels:
      app: proxypruebastecnicas
  template:
    metadata:
      labels:
        app: proxypruebastecnicas
    spec:
      containers:
        - name: proxypruebastecnicas
          image: us-central1-docker.pkg.dev/grupo-19-experimento2-400014/uniandes-misw-proyecto-grupo19/servicio-proxy-prueba-tecnica:1.0
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "64Mi"
              cpu: "250m"
          env:
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: REDISHOST
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: redisHost
            - name: REDISPORT
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: portRedis
          ports:
            - containerPort: 5002
          imagePullPolicy: Always
---
kind: Service
apiVersion: v1
metadata:
  name: servicio-proxypruebastecnicas
  annotations:
    cloud.google.com/backend-config: '{"default": "proxypruebastecnicas-config"}'
spec:
  type: NodePort
  selector:
    app: proxypruebastecnicas
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5002
      nodePort: 31022
---
# Monitor jobs
apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitor-cronjob
  labels:
    app: monitor-cronjob
spec:
  replicas: 1
  selector:
    matchLabels:
      app: monitor-cronjob
  template:
    metadata:
      labels:
        app: monitor-cronjob
    spec:
      containers:
        - name: monitor-cronjob
          image: us-central1-docker.pkg.dev/grupo-19-experimento2-400014/uniandes-misw-proyecto-grupo19/servicio-monitor-cron:1.0
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "64Mi"
              cpu: "250m"
          env:
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: TIME_JOB
              value: "0"
            - name: TIME_WAIT
              value: "60"  
            - name: USER_NOTIFICATION
              value: "Grupo 19"  
            - name: EMAILS_NOTIFICATION
              value: "b.gonzalezp@uniandes.edu.co, af.ostor10@uniandes.edu.co, js.riveraa1@uniandes.edu.co, mc.gomezt1@uniandes.edu.co"  
            - name: URL_PRUEBA_TEC
              value: "http://servicio-pruebastecnicas/pruebatecnica/"  
            - name: URL_PRUEBA_TEC_BK
              value: "http://servicio-pruebastecnicascontingencia/pruebatecnica-contingencia/"      
            - name: EMAIL_SMTP
              value: "smtp.gmail.com"  
            - name: PRUERTO_SMTP
              value: "587"
            - name: REDISHOST
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: redisHost
            - name: REDISPORT
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: portRedis
            - name: SENDER_EMAIL_ADDRESS
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: senderEmailAddress
            - name: PASSWORD_EMAIL
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: passwordEmail
          ports:
            - containerPort: 5001
          imagePullPolicy: Always
---
kind: Service
apiVersion: v1
metadata:
  name: servicio-monitor-cronjob
  annotations:
    cloud.google.com/backend-config: '{"default": "monitor-cronjob-config"}'
spec:
  type: NodePort
  selector:
    app: monitor-cronjob
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5001
      nodePort: 31021